/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
/* eslint-disable */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.echo.Create', null, global);
goog.exportSymbol('proto.echo.EchoReply', null, global);
goog.exportSymbol('proto.echo.Hedge', null, global);
goog.exportSymbol('proto.echo.Stop', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.echo.Create = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.echo.Create, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.echo.Create.displayName = 'proto.echo.Create';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.echo.Create.prototype.toObject = function(opt_includeInstance) {
        return proto.echo.Create.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.echo.Create} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.echo.Create.toObject = function(includeInstance, msg) {
        var f, obj = {
            ticker: jspb.Message.getFieldWithDefault(msg, 1, ""),
            spotDate: (f = msg.getSpotDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
            investmentAmount: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
            price: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
            botId: jspb.Message.getFieldWithDefault(msg, 5, ""),
            margin: jspb.Message.getFieldWithDefault(msg, 6, 0),
            fraction: jspb.Message.getFieldWithDefault(msg, 7, false),
            tpMultiplier: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
            slMultiplier: +jspb.Message.getFieldWithDefault(msg, 9, 0.0)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.echo.Create}
 */
proto.echo.Create.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.echo.Create;
    return proto.echo.Create.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.echo.Create} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.echo.Create}
 */
proto.echo.Create.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setTicker(value);
                break;
            case 2:
                var value = new google_protobuf_timestamp_pb.Timestamp;
                reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
                msg.setSpotDate(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setInvestmentAmount(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setPrice(value);
                break;
            case 5:
                var value = /** @type {string} */ (reader.readString());
                msg.setBotId(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readInt32());
                msg.setMargin(value);
                break;
            case 7:
                var value = /** @type {boolean} */ (reader.readBool());
                msg.setFraction(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setTpMultiplier(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setSlMultiplier(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.echo.Create.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.echo.Create.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.echo.Create} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.echo.Create.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getTicker();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getSpotDate();
    if (f != null) {
        writer.writeMessage(
            2,
            f,
            google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
        );
    }
    f = message.getInvestmentAmount();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = message.getPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = message.getBotId();
    if (f.length > 0) {
        writer.writeString(
            5,
            f
        );
    }
    f = message.getMargin();
    if (f !== 0) {
        writer.writeInt32(
            6,
            f
        );
    }
    f = message.getFraction();
    if (f) {
        writer.writeBool(
            7,
            f
        );
    }
    f = message.getTpMultiplier();
    if (f !== 0.0) {
        writer.writeFloat(
            8,
            f
        );
    }
    f = message.getSlMultiplier();
    if (f !== 0.0) {
        writer.writeFloat(
            9,
            f
        );
    }
};


/**
 * optional string ticker = 1;
 * @return {string}
 */
proto.echo.Create.prototype.getTicker = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.echo.Create.prototype.setTicker = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp spot_date = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.echo.Create.prototype.getSpotDate = function() {
    return /** @type{?proto.google.protobuf.Timestamp} */ (
        jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.echo.Create.prototype.setSpotDate = function(value) {
    jspb.Message.setWrapperField(this, 2, value);
};


proto.echo.Create.prototype.clearSpotDate = function() {
    this.setSpotDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.echo.Create.prototype.hasSpotDate = function() {
    return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float investment_amount = 3;
 * @return {number}
 */
proto.echo.Create.prototype.getInvestmentAmount = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.echo.Create.prototype.setInvestmentAmount = function(value) {
    jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float price = 4;
 * @return {number}
 */
proto.echo.Create.prototype.getPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.echo.Create.prototype.setPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional string bot_id = 5;
 * @return {string}
 */
proto.echo.Create.prototype.getBotId = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.echo.Create.prototype.setBotId = function(value) {
    jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional int32 margin = 6;
 * @return {number}
 */
proto.echo.Create.prototype.getMargin = function() {
    return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.echo.Create.prototype.setMargin = function(value) {
    jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool fraction = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.echo.Create.prototype.getFraction = function() {
    return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.echo.Create.prototype.setFraction = function(value) {
    jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional float tp_multiplier = 8;
 * @return {number}
 */
proto.echo.Create.prototype.getTpMultiplier = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.echo.Create.prototype.setTpMultiplier = function(value) {
    jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float sl_multiplier = 9;
 * @return {number}
 */
proto.echo.Create.prototype.getSlMultiplier = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.echo.Create.prototype.setSlMultiplier = function(value) {
    jspb.Message.setProto3FloatField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.echo.Hedge = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.echo.Hedge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.echo.Hedge.displayName = 'proto.echo.Hedge';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.echo.Hedge.prototype.toObject = function(opt_includeInstance) {
        return proto.echo.Hedge.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.echo.Hedge} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.echo.Hedge.toObject = function(includeInstance, msg) {
        var f, obj = {
            botId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            ric: jspb.Message.getFieldWithDefault(msg, 2, ""),
            currentPrice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
            entryPrice: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
            lastShareNum: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
            lastHedgeDelta: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
            investmentAmount: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
            botCashBalance: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
            stopLossPrice: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
            takeProfitPrice: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
            expiry: (f = msg.getExpiry()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
            strike: +jspb.Message.getFieldWithDefault(msg, 12, 0.0),
            strike2: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
            margin: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
            fraction: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
            optionPrice: +jspb.Message.getFieldWithDefault(msg, 16, 0.0),
            barrier: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
            currentLowPrice: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
            currentHighPrice: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
            askPrice: +jspb.Message.getFieldWithDefault(msg, 20, 0.0),
            bidPrice: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
            tradingDay: (f = msg.getTradingDay()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.echo.Hedge}
 */
proto.echo.Hedge.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.echo.Hedge;
    return proto.echo.Hedge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.echo.Hedge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.echo.Hedge}
 */
proto.echo.Hedge.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setBotId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setRic(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCurrentPrice(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setEntryPrice(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setLastShareNum(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setLastHedgeDelta(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setInvestmentAmount(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setBotCashBalance(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStopLossPrice(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setTakeProfitPrice(value);
                break;
            case 11:
                var value = new google_protobuf_timestamp_pb.Timestamp;
                reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
                msg.setExpiry(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStrike(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStrike2(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setMargin(value);
                break;
            case 15:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setFraction(value);
                break;
            case 16:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setOptionPrice(value);
                break;
            case 17:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setBarrier(value);
                break;
            case 18:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCurrentLowPrice(value);
                break;
            case 19:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCurrentHighPrice(value);
                break;
            case 20:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setAskPrice(value);
                break;
            case 21:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setBidPrice(value);
                break;
            case 22:
                var value = new google_protobuf_timestamp_pb.Timestamp;
                reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
                msg.setTradingDay(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.echo.Hedge.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.echo.Hedge.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.echo.Hedge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.echo.Hedge.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getBotId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getRic();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = message.getCurrentPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = message.getEntryPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = message.getLastShareNum();
    if (f !== 0.0) {
        writer.writeFloat(
            5,
            f
        );
    }
    f = message.getLastHedgeDelta();
    if (f !== 0.0) {
        writer.writeFloat(
            6,
            f
        );
    }
    f = message.getInvestmentAmount();
    if (f !== 0.0) {
        writer.writeFloat(
            7,
            f
        );
    }
    f = message.getBotCashBalance();
    if (f !== 0.0) {
        writer.writeFloat(
            8,
            f
        );
    }
    f = message.getStopLossPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            9,
            f
        );
    }
    f = message.getTakeProfitPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            10,
            f
        );
    }
    f = message.getExpiry();
    if (f != null) {
        writer.writeMessage(
            11,
            f,
            google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
        );
    }
    f = message.getStrike();
    if (f !== 0.0) {
        writer.writeFloat(
            12,
            f
        );
    }
    f = message.getStrike2();
    if (f !== 0.0) {
        writer.writeFloat(
            13,
            f
        );
    }
    f = message.getMargin();
    if (f !== 0.0) {
        writer.writeFloat(
            14,
            f
        );
    }
    f = message.getFraction();
    if (f !== 0.0) {
        writer.writeFloat(
            15,
            f
        );
    }
    f = message.getOptionPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            16,
            f
        );
    }
    f = message.getBarrier();
    if (f !== 0.0) {
        writer.writeFloat(
            17,
            f
        );
    }
    f = message.getCurrentLowPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            18,
            f
        );
    }
    f = message.getCurrentHighPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            19,
            f
        );
    }
    f = message.getAskPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            20,
            f
        );
    }
    f = message.getBidPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            21,
            f
        );
    }
    f = message.getTradingDay();
    if (f != null) {
        writer.writeMessage(
            22,
            f,
            google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
        );
    }
};


/**
 * optional string bot_id = 1;
 * @return {string}
 */
proto.echo.Hedge.prototype.getBotId = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.echo.Hedge.prototype.setBotId = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ric = 2;
 * @return {string}
 */
proto.echo.Hedge.prototype.getRic = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.echo.Hedge.prototype.setRic = function(value) {
    jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float current_price = 3;
 * @return {number}
 */
proto.echo.Hedge.prototype.getCurrentPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setCurrentPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float entry_price = 4;
 * @return {number}
 */
proto.echo.Hedge.prototype.getEntryPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setEntryPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float last_share_num = 5;
 * @return {number}
 */
proto.echo.Hedge.prototype.getLastShareNum = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setLastShareNum = function(value) {
    jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float last_hedge_delta = 6;
 * @return {number}
 */
proto.echo.Hedge.prototype.getLastHedgeDelta = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setLastHedgeDelta = function(value) {
    jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float investment_amount = 7;
 * @return {number}
 */
proto.echo.Hedge.prototype.getInvestmentAmount = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setInvestmentAmount = function(value) {
    jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float bot_cash_balance = 8;
 * @return {number}
 */
proto.echo.Hedge.prototype.getBotCashBalance = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setBotCashBalance = function(value) {
    jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float stop_loss_price = 9;
 * @return {number}
 */
proto.echo.Hedge.prototype.getStopLossPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setStopLossPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float take_profit_price = 10;
 * @return {number}
 */
proto.echo.Hedge.prototype.getTakeProfitPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setTakeProfitPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp expiry = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.echo.Hedge.prototype.getExpiry = function() {
    return /** @type{?proto.google.protobuf.Timestamp} */ (
        jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.echo.Hedge.prototype.setExpiry = function(value) {
    jspb.Message.setWrapperField(this, 11, value);
};


proto.echo.Hedge.prototype.clearExpiry = function() {
    this.setExpiry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.echo.Hedge.prototype.hasExpiry = function() {
    return jspb.Message.getField(this, 11) != null;
};


/**
 * optional float strike = 12;
 * @return {number}
 */
proto.echo.Hedge.prototype.getStrike = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setStrike = function(value) {
    jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float strike_2 = 13;
 * @return {number}
 */
proto.echo.Hedge.prototype.getStrike2 = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setStrike2 = function(value) {
    jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float margin = 14;
 * @return {number}
 */
proto.echo.Hedge.prototype.getMargin = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setMargin = function(value) {
    jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float fraction = 15;
 * @return {number}
 */
proto.echo.Hedge.prototype.getFraction = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setFraction = function(value) {
    jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float option_price = 16;
 * @return {number}
 */
proto.echo.Hedge.prototype.getOptionPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setOptionPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float barrier = 17;
 * @return {number}
 */
proto.echo.Hedge.prototype.getBarrier = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setBarrier = function(value) {
    jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float current_low_price = 18;
 * @return {number}
 */
proto.echo.Hedge.prototype.getCurrentLowPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setCurrentLowPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional float current_high_price = 19;
 * @return {number}
 */
proto.echo.Hedge.prototype.getCurrentHighPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setCurrentHighPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional float ask_price = 20;
 * @return {number}
 */
proto.echo.Hedge.prototype.getAskPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setAskPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional float bid_price = 21;
 * @return {number}
 */
proto.echo.Hedge.prototype.getBidPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.echo.Hedge.prototype.setBidPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional google.protobuf.Timestamp trading_day = 22;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.echo.Hedge.prototype.getTradingDay = function() {
    return /** @type{?proto.google.protobuf.Timestamp} */ (
        jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 22));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.echo.Hedge.prototype.setTradingDay = function(value) {
    jspb.Message.setWrapperField(this, 22, value);
};


proto.echo.Hedge.prototype.clearTradingDay = function() {
    this.setTradingDay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.echo.Hedge.prototype.hasTradingDay = function() {
    return jspb.Message.getField(this, 22) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.echo.Stop = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.echo.Stop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.echo.Stop.displayName = 'proto.echo.Stop';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.echo.Stop.prototype.toObject = function(opt_includeInstance) {
        return proto.echo.Stop.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.echo.Stop} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.echo.Stop.toObject = function(includeInstance, msg) {
        var f, obj = {
            botId: jspb.Message.getFieldWithDefault(msg, 1, ""),
            ric: jspb.Message.getFieldWithDefault(msg, 2, ""),
            currentPrice: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
            entryPrice: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
            lastShareNum: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
            lastHedgeDelta: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
            investmentAmount: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
            botCashBalance: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
            stopLossPrice: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
            takeProfitPrice: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
            expiry: (f = msg.getExpiry()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
            strike: +jspb.Message.getFieldWithDefault(msg, 12, 0.0),
            strike2: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
            margin: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
            fraction: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
            optionPrice: +jspb.Message.getFieldWithDefault(msg, 16, 0.0),
            barrier: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
            currentLowPrice: +jspb.Message.getFieldWithDefault(msg, 18, 0.0),
            currentHighPrice: +jspb.Message.getFieldWithDefault(msg, 19, 0.0),
            askPrice: +jspb.Message.getFieldWithDefault(msg, 20, 0.0),
            bidPrice: +jspb.Message.getFieldWithDefault(msg, 21, 0.0),
            tradingDay: (f = msg.getTradingDay()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.echo.Stop}
 */
proto.echo.Stop.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.echo.Stop;
    return proto.echo.Stop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.echo.Stop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.echo.Stop}
 */
proto.echo.Stop.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setBotId(value);
                break;
            case 2:
                var value = /** @type {string} */ (reader.readString());
                msg.setRic(value);
                break;
            case 3:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCurrentPrice(value);
                break;
            case 4:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setEntryPrice(value);
                break;
            case 5:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setLastShareNum(value);
                break;
            case 6:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setLastHedgeDelta(value);
                break;
            case 7:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setInvestmentAmount(value);
                break;
            case 8:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setBotCashBalance(value);
                break;
            case 9:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStopLossPrice(value);
                break;
            case 10:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setTakeProfitPrice(value);
                break;
            case 11:
                var value = new google_protobuf_timestamp_pb.Timestamp;
                reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
                msg.setExpiry(value);
                break;
            case 12:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStrike(value);
                break;
            case 13:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setStrike2(value);
                break;
            case 14:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setMargin(value);
                break;
            case 15:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setFraction(value);
                break;
            case 16:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setOptionPrice(value);
                break;
            case 17:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setBarrier(value);
                break;
            case 18:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCurrentLowPrice(value);
                break;
            case 19:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setCurrentHighPrice(value);
                break;
            case 20:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setAskPrice(value);
                break;
            case 21:
                var value = /** @type {number} */ (reader.readFloat());
                msg.setBidPrice(value);
                break;
            case 22:
                var value = new google_protobuf_timestamp_pb.Timestamp;
                reader.readMessage(value, google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
                msg.setTradingDay(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.echo.Stop.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.echo.Stop.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.echo.Stop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.echo.Stop.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getBotId();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
    f = message.getRic();
    if (f.length > 0) {
        writer.writeString(
            2,
            f
        );
    }
    f = message.getCurrentPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            3,
            f
        );
    }
    f = message.getEntryPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            4,
            f
        );
    }
    f = message.getLastShareNum();
    if (f !== 0.0) {
        writer.writeFloat(
            5,
            f
        );
    }
    f = message.getLastHedgeDelta();
    if (f !== 0.0) {
        writer.writeFloat(
            6,
            f
        );
    }
    f = message.getInvestmentAmount();
    if (f !== 0.0) {
        writer.writeFloat(
            7,
            f
        );
    }
    f = message.getBotCashBalance();
    if (f !== 0.0) {
        writer.writeFloat(
            8,
            f
        );
    }
    f = message.getStopLossPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            9,
            f
        );
    }
    f = message.getTakeProfitPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            10,
            f
        );
    }
    f = message.getExpiry();
    if (f != null) {
        writer.writeMessage(
            11,
            f,
            google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
        );
    }
    f = message.getStrike();
    if (f !== 0.0) {
        writer.writeFloat(
            12,
            f
        );
    }
    f = message.getStrike2();
    if (f !== 0.0) {
        writer.writeFloat(
            13,
            f
        );
    }
    f = message.getMargin();
    if (f !== 0.0) {
        writer.writeFloat(
            14,
            f
        );
    }
    f = message.getFraction();
    if (f !== 0.0) {
        writer.writeFloat(
            15,
            f
        );
    }
    f = message.getOptionPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            16,
            f
        );
    }
    f = message.getBarrier();
    if (f !== 0.0) {
        writer.writeFloat(
            17,
            f
        );
    }
    f = message.getCurrentLowPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            18,
            f
        );
    }
    f = message.getCurrentHighPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            19,
            f
        );
    }
    f = message.getAskPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            20,
            f
        );
    }
    f = message.getBidPrice();
    if (f !== 0.0) {
        writer.writeFloat(
            21,
            f
        );
    }
    f = message.getTradingDay();
    if (f != null) {
        writer.writeMessage(
            22,
            f,
            google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
        );
    }
};


/**
 * optional string bot_id = 1;
 * @return {string}
 */
proto.echo.Stop.prototype.getBotId = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.echo.Stop.prototype.setBotId = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ric = 2;
 * @return {string}
 */
proto.echo.Stop.prototype.getRic = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.echo.Stop.prototype.setRic = function(value) {
    jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional float current_price = 3;
 * @return {number}
 */
proto.echo.Stop.prototype.getCurrentPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setCurrentPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional float entry_price = 4;
 * @return {number}
 */
proto.echo.Stop.prototype.getEntryPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setEntryPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional float last_share_num = 5;
 * @return {number}
 */
proto.echo.Stop.prototype.getLastShareNum = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setLastShareNum = function(value) {
    jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional float last_hedge_delta = 6;
 * @return {number}
 */
proto.echo.Stop.prototype.getLastHedgeDelta = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setLastHedgeDelta = function(value) {
    jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float investment_amount = 7;
 * @return {number}
 */
proto.echo.Stop.prototype.getInvestmentAmount = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setInvestmentAmount = function(value) {
    jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float bot_cash_balance = 8;
 * @return {number}
 */
proto.echo.Stop.prototype.getBotCashBalance = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setBotCashBalance = function(value) {
    jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional float stop_loss_price = 9;
 * @return {number}
 */
proto.echo.Stop.prototype.getStopLossPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setStopLossPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional float take_profit_price = 10;
 * @return {number}
 */
proto.echo.Stop.prototype.getTakeProfitPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setTakeProfitPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional google.protobuf.Timestamp expiry = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.echo.Stop.prototype.getExpiry = function() {
    return /** @type{?proto.google.protobuf.Timestamp} */ (
        jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.echo.Stop.prototype.setExpiry = function(value) {
    jspb.Message.setWrapperField(this, 11, value);
};


proto.echo.Stop.prototype.clearExpiry = function() {
    this.setExpiry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.echo.Stop.prototype.hasExpiry = function() {
    return jspb.Message.getField(this, 11) != null;
};


/**
 * optional float strike = 12;
 * @return {number}
 */
proto.echo.Stop.prototype.getStrike = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setStrike = function(value) {
    jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional float strike_2 = 13;
 * @return {number}
 */
proto.echo.Stop.prototype.getStrike2 = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setStrike2 = function(value) {
    jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional float margin = 14;
 * @return {number}
 */
proto.echo.Stop.prototype.getMargin = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setMargin = function(value) {
    jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional float fraction = 15;
 * @return {number}
 */
proto.echo.Stop.prototype.getFraction = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setFraction = function(value) {
    jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional float option_price = 16;
 * @return {number}
 */
proto.echo.Stop.prototype.getOptionPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setOptionPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional float barrier = 17;
 * @return {number}
 */
proto.echo.Stop.prototype.getBarrier = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setBarrier = function(value) {
    jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional float current_low_price = 18;
 * @return {number}
 */
proto.echo.Stop.prototype.getCurrentLowPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setCurrentLowPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 18, value);
};


/**
 * optional float current_high_price = 19;
 * @return {number}
 */
proto.echo.Stop.prototype.getCurrentHighPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setCurrentHighPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 19, value);
};


/**
 * optional float ask_price = 20;
 * @return {number}
 */
proto.echo.Stop.prototype.getAskPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setAskPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 20, value);
};


/**
 * optional float bid_price = 21;
 * @return {number}
 */
proto.echo.Stop.prototype.getBidPrice = function() {
    return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.echo.Stop.prototype.setBidPrice = function(value) {
    jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional google.protobuf.Timestamp trading_day = 22;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.echo.Stop.prototype.getTradingDay = function() {
    return /** @type{?proto.google.protobuf.Timestamp} */ (
        jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 22));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.echo.Stop.prototype.setTradingDay = function(value) {
    jspb.Message.setWrapperField(this, 22, value);
};


proto.echo.Stop.prototype.clearTradingDay = function() {
    this.setTradingDay(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.echo.Stop.prototype.hasTradingDay = function() {
    return jspb.Message.getField(this, 22) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.echo.EchoReply = function(opt_data) {
    jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.echo.EchoReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
    proto.echo.EchoReply.displayName = 'proto.echo.EchoReply';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
    /**
     * Creates an object representation of this proto suitable for use in Soy templates.
     * Field names that are reserved in JavaScript and will be renamed to pb_name.
     * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
     * For the list of reserved names please see:
     *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
     * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
     *     for transitional soy proto support: http://goto/soy-param-migration
     * @return {!Object}
     */
    proto.echo.EchoReply.prototype.toObject = function(opt_includeInstance) {
        return proto.echo.EchoReply.toObject(opt_includeInstance, this);
    };


    /**
     * Static version of the {@see toObject} method.
     * @param {boolean|undefined} includeInstance Whether to include the JSPB
     *     instance for transitional soy proto support:
     *     http://goto/soy-param-migration
     * @param {!proto.echo.EchoReply} msg The msg instance to transform.
     * @return {!Object}
     * @suppress {unusedLocalVariables} f is only used for nested messages
     */
    proto.echo.EchoReply.toObject = function(includeInstance, msg) {
        var f, obj = {
            message: jspb.Message.getFieldWithDefault(msg, 1, "")
        };

        if (includeInstance) {
            obj.$jspbMessageInstance = msg;
        }
        return obj;
    };
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.echo.EchoReply}
 */
proto.echo.EchoReply.deserializeBinary = function(bytes) {
    var reader = new jspb.BinaryReader(bytes);
    var msg = new proto.echo.EchoReply;
    return proto.echo.EchoReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.echo.EchoReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.echo.EchoReply}
 */
proto.echo.EchoReply.deserializeBinaryFromReader = function(msg, reader) {
    while (reader.nextField()) {
        if (reader.isEndGroup()) {
            break;
        }
        var field = reader.getFieldNumber();
        switch (field) {
            case 1:
                var value = /** @type {string} */ (reader.readString());
                msg.setMessage(value);
                break;
            default:
                reader.skipField();
                break;
        }
    }
    return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.echo.EchoReply.prototype.serializeBinary = function() {
    var writer = new jspb.BinaryWriter();
    proto.echo.EchoReply.serializeBinaryToWriter(this, writer);
    return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.echo.EchoReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.echo.EchoReply.serializeBinaryToWriter = function(message, writer) {
    var f = undefined;
    f = message.getMessage();
    if (f.length > 0) {
        writer.writeString(
            1,
            f
        );
    }
};


/**
 * optional string message = 1;
 * @return {string}
 */
proto.echo.EchoReply.prototype.getMessage = function() {
    return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.echo.EchoReply.prototype.setMessage = function(value) {
    jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, proto.echo);